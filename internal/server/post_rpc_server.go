// Code generated by goctl. DO NOT EDIT.
// Source: post.proto

package server

import (
	"context"

	"github.com/xh-polaris/meowchat-post-rpc/internal/logic"
	"github.com/xh-polaris/meowchat-post-rpc/internal/svc"
	"github.com/xh-polaris/meowchat-post-rpc/pb"
)

type PostRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedPostRpcServer
}

func NewPostRpcServer(svcCtx *svc.ServiceContext) *PostRpcServer {
	return &PostRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *PostRpcServer) CreatePost(ctx context.Context, in *pb.CreatePostReq) (*pb.CreatePostResp, error) {
	l := logic.NewCreatePostLogic(ctx, s.svcCtx)
	return l.CreatePost(in)
}

func (s *PostRpcServer) RetrievePost(ctx context.Context, in *pb.RetrievePostReq) (*pb.RetrievePostResp, error) {
	l := logic.NewRetrievePostLogic(ctx, s.svcCtx)
	return l.RetrievePost(in)
}

func (s *PostRpcServer) UpdatePost(ctx context.Context, in *pb.UpdatePostReq) (*pb.UpdatePostResp, error) {
	l := logic.NewUpdatePostLogic(ctx, s.svcCtx)
	return l.UpdatePost(in)
}

func (s *PostRpcServer) DeletePost(ctx context.Context, in *pb.DeletePostReq) (*pb.DeletePostResp, error) {
	l := logic.NewDeletePostLogic(ctx, s.svcCtx)
	return l.DeletePost(in)
}

func (s *PostRpcServer) ListPost(ctx context.Context, in *pb.ListPostReq) (*pb.ListPostResp, error) {
	l := logic.NewListPostLogic(ctx, s.svcCtx)
	return l.ListPost(in)
}

func (s *PostRpcServer) CountPost(ctx context.Context, in *pb.CountPostReq) (*pb.CountPostResp, error) {
	l := logic.NewCountPostLogic(ctx, s.svcCtx)
	return l.CountPost(in)
}

func (s *PostRpcServer) SetOfficial(ctx context.Context, in *pb.SetOfficialReq) (*pb.SetOfficialResp, error) {
	l := logic.NewSetOfficialLogic(ctx, s.svcCtx)
	return l.SetOfficial(in)
}
